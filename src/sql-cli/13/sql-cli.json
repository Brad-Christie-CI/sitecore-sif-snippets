{
  // https://www.microsoft.com/en-us/download/details.aspx?id=52680
  // Requirements:
  // Windows 10 , Windows 7, Windows 8, Windows 8.1, Windows Server 2008, Windows
  // Server 2008 R2, Windows Server 2008 R2 SP1, Windows Server 2012, Windows Server
  // 2012 R2
  // Note: This component requires both Windows Installer 4.5 and Microsoft ODBC
  // Driver 13 for SQL Server (see Related Downloads).
  "Parameters": {
    "TempLocation": {
      "Type": "string",
      "Description": "Alternative location to save downloads. If left on the default $Env:Temp will be used.",
      "DefaultValue": "SIF-Default",
      "Validate": "[TestPath(variable('Temp.Location'))]"
    },
    "SqlCmdLineDownload": {
      "Type": "string",
      "Description": "Download location for Microsoft Command Line Utilities for SQL Server (x86)",
      "DefaultValue": "https://download.microsoft.com/download/C/8/E/C8ECE442-C29C-4EE4-BD73-872C03D9EB84/ENG_1033/x86/MsSqlCmdLnUtils.msi"
    },
    "SqlCmdLine64Download": {
      "Type": "string",
      "Description": "Download location for Microsoft Command Line Utilities for SQL Server (x64)",
      "DefaultValue": "https://download.microsoft.com/download/C/8/E/C8ECE442-C29C-4EE4-BD73-872C03D9EB84/ENG_1033/x64/SqlCmdLnUtils.msi"
    }
  },
  "Variables": {
    "Check.Is64": "[Eval('[System.Environment]::Is64BitOperatingSystem')]",
    "Check.SqlCmdLine": "[ValidateNotNull(GetPackage(Name:variable('DisplayName.SqlCmdLine'),ErrorAction:'Continue'))]",
    "Check.SqlServer": "[ValidateNotNull(GetPackage(name:variable('DisplayName.SqlServer')))]",

    "DisplayName.SqlCmdLine": "Microsoft SQL Server 2012 Command Line Utilities ",
    "DisplayName.SqlServer": "Microsoft SQL Server 20?? (??-bit)",

    "SqlCmdLine.SourceUri": "[if(variable('Check.Is64'),parameter('SqlCmdLine64Download'),parameter('SqlCmdLineDownload'))]",
    "SqlCmdLine.DisplayNameNote": "HEADS UP: Space at the end of ^^^ is NOT an error--package actually includes one.",
    "SqlCmdLine.Download": "[JoinPath(variable('Temp.Location'),'MsSqlCmdLnUtils.msi')]",

    "Temp.Location" : "[if(variable('Test.Temp.Location'),Environment('Temp'),parameter('TempLocation'))]",

    "Test.Temp.Location" : "[equal(parameter('TempLocation'),'SIF-Default')]"
  },
  "Register": {
    "ConfigFunction": {
      "Eval": "Invoke-Expression",
      "GetPackage": "Get-Package",
      "TestPath": "Test-Path"
    },
    "Tasks": {
      "RemoveItem": "Remove-Item",
      "StartProcess": "Start-Process",
      "UninstallPackage": "Uninstall-Package",
      "WriteError": "Write-Error"
    }
  },
  "Tasks": {
    "SetupTempLocation": {
      "Type": "EnsurePath",
      "Params": {
        "Exists": ["[variable('Temp.Location')]"]
      }
    },
    "CheckForSql": {
      "Type": "WriteError",
      "Params": {
        "Message": "SQL Server not installed.",
        "Category": "InvalidOperation",
        "ErrorAction": "Stop"
      },
      "Skip": "[variable('Check.SqlServer')]"
    },

    "DownloadSqlCmdLine": {
      "Type": "DownloadFile",
      "Params": {
        "SourceUri": "[variable('SqlCmdLine.SourceUri')]",
        "DestinationPath": "[variable('SqlCmdLine.Download')]"
      },
      "Skip": "[or(variable('Check.SqlCmdLine'),TestPath(variable('SqlCmdLine.Download')))]"
    },
    "InstallSqlCmdLine": {
      "Type": "StartProcess",
      "Params": {
        "FilePath": "msiexec.exe",
        "ArgumentList": [
          "/i", "[variable('SqlCmdLine.Download')]",
          "/quiet", "/norestart"
        ],
        "Wait": true
      },
      "Skip": "[variable('Check.SqlCmdLine')]"
    },
    "CleanArtifacts": {
      "Type": "RemoveItem",
      "Params": {
        "LiteralPath": [
          "[variable('SqlCmdLine.Download')]"
        ],
        "Recurse": true,
        "ErrorAction": "SilentlyContinue"
      }
    }
  }
}